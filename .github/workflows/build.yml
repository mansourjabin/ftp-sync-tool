name: Build and Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version (e.g., 1.0.2)'
        required: true
        default: '1.0.2'

jobs:
  build:
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            name: ftp-sync-linux
            path: dist/ftp-sync-linux
          - os: windows-latest
            name: ftp-sync-windows.exe
            path: dist/ftp-sync-windows.exe
          - os: macos-latest
            name: ftp-sync-macos
            path: dist/ftp-sync-macos
            
    runs-on: ${{ matrix.os }}
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller colorama
        
    - name: Build executable
      run: |
        pyinstaller --onefile --name ${{ matrix.name }} ftp_sync.py
        
    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.name }}
        path: ${{ matrix.path }}

  release:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
      
    steps:
    - uses: actions/checkout@v4
    
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: dist/
        
    - name: Display structure
      run: ls -la dist/
      
    - name: Create Release
      uses: softprops/action-gh-release@v2
      with:
        tag_name: v${{ github.event.inputs.version }}
        name: FTP Sync Tool v${{ github.event.inputs.version }}
        body: |
          ## ðŸš€ FTP Sync Tool v${{ github.event.inputs.version }}
          
          ### ðŸ“¦ Downloads
          - **Windows**: [ftp-sync-windows.exe](https://github.com/${{ github.repository }}/releases/download/v${{ github.event.inputs.version }}/ftp-sync-windows.exe)
          - **Linux**: [ftp-sync-linux](https://github.com/${{ github.repository }}/releases/download/v${{ github.event.inputs.version }}/ftp-sync-linux)
          - **macOS**: [ftp-sync-macos](https://github.com/${{ github.repository }}/releases/download/v${{ github.event.inputs.version }}/ftp-sync-macos)
          
          ### ðŸ”§ Installation
          
          **Windows**: Download and run `ftp-sync-windows.exe`
          
          **Linux/macOS**: 
          ```bash
          chmod +x ftp-sync-linux  # or ftp-sync-macos
          ./ftp-sync-linux
          ```
        files: |
          dist/ftp-sync-windows.exe/ftp-sync-windows.exe
          dist/ftp-sync-linux/ftp-sync-linux
          dist/ftp-sync-macos/ftp-sync-macos
          
    - name: Update README
      run: |
        # Update version numbers in README
        sed -i "s|download/v[0-9.]*|download/v${{ github.event.inputs.version }}|g" README.md
        
        # Setup git
        git config --global user.name 'github-actions[bot]'
        git config --global user.email 'github-actions[bot]@users.noreply.github.com'
        
        # Commit and push
        git add README.md
        git commit -m "Update README to v${{ github.event.inputs.version }}" || echo "No changes to commit"
        git push
